#!/usr/bin/with-contenv bashio
# shellcheck disable=SC2191
# ==============================================================================
# Home Assistant Add-on: Nightscout
# Runs Nightscout
# ==============================================================================
declare -a options

# Wait for MongoDB to become available
bashio::net.wait_for 27017

bashio::log.info 'Starting the Nightscout server...'

# Config server variables
readonly api_key=$(bashio::config 'api_key')
bashio::log.debug "Setting up API KEY: ${api_key}"
readonly mongodb_uri=$(bashio::config 'mongodb_uri')
bashio::log.debug "Setting up MONGODB_URI: ${mongodb_uri}"
readonly connect_source=$(bashio::config 'connect_source')
bashio::log.debug "Setting up CONNECT_SOURCE: ${connect_source}"
readonly connect_link_up_username=$(bashio::config 'connect_link_up_username')
bashio::log.debug "Setting up CONNECT_LINK_UP_USERNAME: ${connect_link_up_username}"
readonly connect_link_up_password=$(bashio::config 'connect_link_up_password')
bashio::log.debug "Setting up CONNECT_LINK_UP_PASSWORD: ${connect_link_up_password}"
readonly connect_link_up_server=$(bashio::config 'connect_link_up_server')
bashio::log.debug "Setting up CONNECT_LINK_UP_SERVER: ${connect_link_up_server}"
readonly connect_link_up_region=$(bashio::config 'connect_link_up_region')
bashio::log.debug "Setting up CONNECT_LINK_UP_REGION: ${connect_link_up_region}"
readonly connect_glooko_email=$(bashio::config 'connect_glooko_email')
bashio::log.debug "Setting up CONNECT_GLOOKO_EMAIL: ${connect_glooko_email}"
readonly connect_glooko_password=$(bashio::config 'connect_glooko_password')
bashio::log.debug "Setting up CONNECT_GLOOKO_PASSWORD: ${connect_glooko_password}"
readonly connect_glooko_env=$(bashio::config 'connect_glooko_env')
bashio::log.debug "Setting up CONNECT_GLOOKO_ENV: ${connect_glooko_env}"
readonly connect_glooko_server=$(bashio::config 'connect_glooko_server')
bashio::log.debug "Setting up CONNECT_GLOOKO_SERVER: ${connect_glooko_server}"
readonly connect_glooko_timezone_offset=$(bashio::config 'connect_glooko_timezone_offset')
bashio::log.debug "Setting up CONNECT_GLOOKO_TIMEZONE_OFFSET: ${connect_glooko_timezone_offset}"
readonly connect_share_account_name=$(bashio::config 'connect_share_account_name')
bashio::log.debug "Setting up CONNECT_SHARE_ACCOUNT_NAME: ${connect_share_account_name}"
readonly connect_share_password=$(bashio::config 'connect_share_password')
bashio::log.debug "Setting up CONNECT_SHARE_PASSWORD: ${connect_share_password}"
readonly connect_share_region=$(bashio::config 'connect_share_region')
bashio::log.debug "Setting up CONNECT_SHARE_REGION: ${connect_share_region}"

export API_SECRET="${api_key}"
export HOSTNAME="127.0.0.1"
export PORT=1337
#export MONGO_CONNECTION="mongodb://127.0.0.1:27017/admin"
export MONGODB_URI="${mongodb_uri}"
export INSECURE_USE_HTTP=true
export SECURE_HSTS_HEADER=false
export CONNECT_SOURCE="${connect_source}"
export CONNECT_LINK_UP_USERNAME="${connect_link_up_username}"
export CONNECT_LINK_UP_PASSWORD="${connect_link_up_password}"
export CONNECT_LINK_UP_SERVER="${connect_link_up_server}"
export CONNECT_LINK_UP_REGION="${connect_link_up_region}"
export CONNECT_GLOOKO_EMAIL="${connect_glooko_email}"
export CONNECT_GLOOKO_PASSWORD="${connect_glooko_password}"
export CONNECT_GLOOKO_ENV="${connect_glooko_env}"
export CONNECT_GLOOKO_SERVER="${connect_glooko_server}"
export CONNECT_GLOOKO_TIMEZONE_OFFSET="${connect_glooko_timezone_offset}"
export CONNECT_SHARE_ACCOUNT_NAME="${connect_share_account_name}"
export CONNECT_SHARE_PASSWORD="${connect_share_password}"
export CONNECT_SHARE_REGION="${connect_share_region}"


if bashio::config.has_value 'auth_default_roles'; then
    readonly auth_default_roles=$(bashio::config 'auth_default_roles')
    export AUTH_DEFAULT_ROLES="${auth_default_roles}"
fi

# Enable plugins
readonly plugins=$(bashio::config 'plugins')
joined=""
delim=""
for item in ${plugins}; do
    joined="$joined$delim$item"
    delim=" "
done
bashio::log.info "Enable plugins: ${joined}"
export ENABLE="${joined}"

# Theme
if bashio::config.has_value 'theme'; then
    readonly theme=$(bashio::config 'theme')
    bashio::log.info "Setting theme to: ${theme}"
    export THEME="${theme}"
fi

# Theme
if bashio::config.has_value 'import_config_url'; then
    readonly import_config_url=$(bashio::config 'import_config_url')
    bashio::log.info "Importing config from URL: ${import_config_url}"
    export IMPORT_CONFIG="${import_config_url}"
fi

# Change current working directory
cd /opt/app || bashio::exit.nok 'Failed changing working directory'

npm install

# Run Nightscout server
exec node server.js
